generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model membership {
  maMembership String          @id @db.VarChar(20)
  level        membershipLevel @default(Bronze)
  minSpending  Decimal         @db.Decimal(12, 2)
  description  String?         @db.Text
  khachhang   khachhang[] 
}

model datphong {
  maDatPhong  String              @id @db.VarChar(20)
  maKhachHang String              @db.VarChar(20)
  maPhong     String              @db.VarChar(20)
  maVoucher  String?              @db.VarChar(20)
  check_in    DateTime?           @db.Date
  check_out   DateTime?           @db.Date
  trangThai   datphong_trangThai?
  tongTien    Decimal             @db.Decimal(12, 2)
  thoiGianDat DateTime            @db.Timestamp(0)
  lyDoHuy String? @db.Text
  phong phong @relation(fields: [maPhong], references: [maPhong])
  khachhang         khachhang         @relation(fields: [maKhachHang], references: [maKhachHang])
  dichvudatphong dichvudatphong[]
  hoadon         hoadon?             @relation("DatPhong_HoaDon")
  voucher    voucher? @relation(fields: [maVoucher], references: [maVoucher])
  binhluan      binhluan[]
  @@index([maKhachHang], map: "maKhachHang")
  @@index([maPhong], map: "maPhong")
}
model voucher {
  maVoucher      String   @id @db.VarChar(20)
  tenVoucher     String   @db.VarChar(100)
  moTa           String?  @db.Text
  phanTramGiam   Int      @db.TinyInt       // Ví dụ: 10 cho 10%
  ngayBatDau     DateTime @db.Date
  ngayKetThuc    DateTime @db.Date
  dieuKienApDung Decimal? @db.Decimal(12, 2) // đơn từ bao nhiêu mới áp dụng
  trangThai      voucher_trangThai? @default(ConHieuLuc)
  datphong       datphong[]  // quan hệ 1-n: mỗi lần đặt có thể dùng 1 voucher
}
model dichvu {
  maDV   String  @id @db.VarChar(20)
  tenDV  String  @db.VarChar(50)
  moTaDV String  @db.Text
  giaDV  Decimal @db.Decimal(12, 2)
  anhDV  String  @db.VarChar(255)
  dichvudatphong    dichvudatphong[]
}

model dichvudatphong {
  ma              String  @id @db.VarChar(20)
  maDatPhong      String  @db.VarChar(20)
  maDichVu        String  @db.VarChar(20)
  tenDichVuLucDat String  @db.VarChar(50)
  donGiaLucDat    Decimal @db.Decimal(12, 2)
  soLuong         Int
  ThanhTien       Decimal @db.Decimal(12, 2)
  trangThaiDV     dichvudatphong_trangThaiDV? @default(ChuaHoanThanh)
  datphong          datphong  @relation(fields: [maDatPhong], references: [maDatPhong])
  dichvu            dichvu?   @relation(fields: [maDichVu], references: [maDV])
  @@index([maDatPhong], map: "maDatPhong")
  @@index([maDichVu], map: "maDichVu")
}

model hoadon {
  maHD                String                     @id @db.VarChar(20)
  phuongThucThanhToan hoadon_phuongThucThanhToan
  trangThaiHD         hoadon_trangThaiHD?
  tongTien            Decimal                    @db.Decimal(12, 2)
  maDatPhong String @unique @db.VarChar(20)
  ngayTaoHD           DateTime                   @default(now()) @db.Timestamp(0)
  datphong            datphong                   @relation("DatPhong_HoaDon", fields: [maDatPhong], references: [maDatPhong])
  @@index([maDatPhong], map: "maDatPhong")
}

model khachhang {
  maKhachHang    String   @id @db.VarChar(20)
  maUser         String   @unique @db.VarChar(50)
  tenKhachHang   String   @db.VarChar(50)
  ngaySinh       DateTime @db.Date
  gioiTinh       String   @db.VarChar(10)
  diaChi         String   @db.VarChar(100)
  soDienThoai    String   @db.VarChar(15)
  maMembership   String?  @db.VarChar(20)

  membership     membership? @relation(fields: [maMembership], references: [maMembership])
  roleadminuser  roleadminuser? @relation(fields: [maUser], references: [email]) // ✅ Giữ lại ở đây
  datphong datphong[]
  lienhe_hotro   lienhe_hotro[] 
  @@index([maUser], map: "maUser")
  @@index([maMembership], map: "maMembership")
}

model lichlamviec {
  malichLamViec String                   @id @db.VarChar(20)
  maNhanVien    String                   @db.VarChar(20)
  maPhong       String                   @db.VarChar(20)
  ngayLam       DateTime                 @db.Date

  loaiCV        LoaiCongViec
  trangThaiCV   lichlamviec_trangThaiCV?
  nhanvien       nhanvien  @relation(fields: [maNhanVien], references: [maNhanVien])
  phong          phong     @relation(fields: [maPhong], references: [maPhong])
  @@index([maNhanVien], map: "maNhanVien")
  @@index([maPhong], map: "maPhong")
}

model loaiphong {
  maLoaiPhong  String   @id @db.VarChar(20)
  tenLoaiPhong String   @db.VarChar(50)
  moTa         String   @db.Text
  hinhAnh      String   @db.VarChar(255)
  soNguoi      Int      @default(2)
  soGiuong     Int      @default(1)
  gia_min      Decimal? @db.Decimal(10, 2)
  gia_max      Decimal? @db.Decimal(10, 2)
  phong      phong[]  
}

model nhanvien {
  maNhanVien       String                     @id @db.VarChar(20)
  maUser           String                     @unique @db.VarChar(50)
  tenNhanVien      String                     @db.VarChar(50)
  soDienThoai      String                     @db.VarChar(15)
  trangThaiLamViec nhanvien_trangThaiLamViec?
  ngayVaoLam       DateTime                   @db.Date
  viTri            String                     @db.VarChar(50)
  roleadminuser  roleadminuser? @relation(fields: [maUser], references: [email])
  lichlamviec  lichlamviec[]
  @@index([maUser], map: "maUser")
}

model phong {
  maPhong     String           @id @db.VarChar(20)
  maLoaiPhong String           @db.VarChar(20)
  moTa        String           @db.Text
  tinhTrang   phong_tinhTrang?
  gia         Decimal          @db.Decimal(12, 2)
  hinhAnh     String           @db.VarChar(255)
  tenPhong    String           @default("") @db.VarChar(50)
  loaiphong   loaiphong        @relation(fields: [maLoaiPhong], references: [maLoaiPhong]) // ✅ thêm dòng này
  datphong   datphong[] 
  lichlamviec  lichlamviec[]
  @@index([maLoaiPhong], map: "maLoaiPhong")
}

model roleadminuser {
  email       String                 @id @db.VarChar(50)
  userName    String                 @unique(map: "userName") @db.VarChar(50)
  passWord    String                 @db.VarChar(100)
  trangThaiTk roleadminuser_trangThaiTk?
  role        roleadminuser_role?
  nhanvien    nhanvien?
  khachhang   khachhang?             // ✅ KHÔNG thêm fields, references
}

model binhluan {
  maBinhLuan String              @id @db.VarChar(20)
  maDatPhong String              @db.VarChar(20)
  noiDung    String              @db.Text
  danhGia    Int                 @default(5) @db.TinyInt
  thoiGianBL DateTime            @default(now()) @db.Timestamp(0)
  trangThai  binhluan_trangThai? @default(ChoPheDuyet)
  datphong  datphong @relation(fields: [maDatPhong], references: [maDatPhong])
  @@index([maDatPhong], map: "maDatPhong")
}
model lienhe_hotro {
  maLienHeHotro String              @id @db.VarChar(20)
  maKhachHang   String              @db.VarChar(20) // Bắt buộc phải có
  tieuDe        String              @db.VarChar(150)
  noiDung       String              @db.Text
  trangThai     lienhe_hotro_trangThai @default(Moi)
  ngayTao       DateTime            @default(now()) @db.Timestamp(0)
  ngayCapNhat   DateTime?           @db.Timestamp(0)

  khachhang     khachhang           @relation(fields: [maKhachHang], references: [maKhachHang])

  @@index([maKhachHang], map: "maKhachHang")
}
enum lienhe_hotro_trangThai {
  Moi          @map("Mới")
  DangXuLy     @map("Đang xử lý")
  DaXuLy       @map("Đã xử lý")
}
enum membershipLevel {
  Bronze  @map("Đồng")
  Silver  @map("Bạc")
  Gold    @map("Vàng")
  Diamond @map("Kim Cương")
}
enum voucher_trangThai {
  ConHieuLuc     @map("Còn hiệu lực")
  HetHan         @map("Hết hạn")
  DaAn           @map("Đã ẩn")
}
enum LoaiCongViec {
  DonDep   @map("Dọn Dẹp")
  SuaChua  @map("Sửa Chữa")
}
enum hoadon_trangThaiHD {
  ChuaThanhToan @map("Chưa Thanh Toán")
  DaThanhToan   @map("Đã Thanh Toán")
  ChoXuLy       @map("Chờ Xử Lý")
  DaHoanTien    @map("Đã Hoàn Tiền")
}
enum dichvudatphong_trangThaiDV {
  ChuaHoanThanh @map("Chưa Hoàn Thành")
  DaHoanThanh   @map("Đã Hoàn Thành")
}
enum phong_tinhTrang {
  Trong       @map("Trống")
  DaDat       @map("Đã Đặt")
  DangDonDep  @map("Đang dọn dẹp")
  DangSuaChua @map("Đang sửa chữa")
}

enum roleadminuser_trangThaiTk {
  DangHoatDong @map("Đang Hoạt Động")
  BiKhoa       @map("Bị Khóa")
}

enum nhanvien_trangThaiLamViec {
  DangLam @map("Đang Làm")
  Nghi    @map("Nghỉ")
}



enum roleadminuser_role {
  KhachHang @map("Khách Hàng")
  NhanVien  @map("Nhân Viên")
  Admin
}

enum datphong_trangThai {
  ChoXacNhan @map("Chờ xác nhận")
  Check_in   @map("Đã Check-in")
  Check_out  @map("Đã Check-out")
  DaHuy      @map("Đã hủy")
  YeuCauHuy  @map("Yêu cầu hủy")
}

enum lichlamviec_trangThaiCV {
  ChuaHoanThanh @map("Chưa Hoàn Thành")
  DaHoanThanh   @map("Đã Hoàn Thành")
}

enum hoadon_phuongThucThanhToan {
  TienMat     @map("Tiền mặt")
  ChuyenKhoan @map("Chuyển khoản")
}

enum binhluan_trangThai {
  ChoPheDuyet @map("Chờ Phê Duyệt")
  DaPheDuyet  @map("Đã Phê Duyệt")
  BiTuChoi    @map("Bị Từ Chối")
}
